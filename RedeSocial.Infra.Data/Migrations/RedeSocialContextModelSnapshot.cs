// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedeSocial.Infra.Data.Context;

#nullable disable

namespace RedeSocial.Infra.Data.Migrations
{
    [DbContext(typeof(RedeSocialContext))]
    partial class RedeSocialContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RedeSocial.Domain.Models.Comments", b =>
                {
                    b.Property<int>("CommentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CommentsId"));

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PostsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("CommentsId");

                    b.HasIndex("PostsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Followers", b =>
                {
                    b.Property<int>("FollowersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FollowersId"));

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("FollowersId");

                    b.HasIndex("UsersId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Likes", b =>
                {
                    b.Property<int>("LikesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LikesId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PostsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("LikesId");

                    b.HasIndex("PostsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Posts", b =>
                {
                    b.Property<int>("PostsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PostsId"));

                    b.Property<int>("CommentsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LikesId")
                        .HasColumnType("int");

                    b.Property<int>("PostsPhotosId")
                        .HasColumnType("int");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("PostsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.PostsPhotos", b =>
                {
                    b.Property<int>("PostsPhotosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PostsPhotosId"));

                    b.Property<string>("PhotoName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("PostsId")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.HasKey("PostsPhotosId");

                    b.HasIndex("PostsId");

                    b.ToTable("PostsPhotos");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Tags", b =>
                {
                    b.Property<int>("TagsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TagsId"));

                    b.Property<int>("PostsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("TagsId");

                    b.HasIndex("PostsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Users", b =>
                {
                    b.Property<int>("UsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UsersId"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UsersId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Comments", b =>
                {
                    b.HasOne("RedeSocial.Domain.Models.Posts", "Posts")
                        .WithMany("Comments")
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RedeSocial.Domain.Models.Users", "Users")
                        .WithMany("Comments")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Posts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Followers", b =>
                {
                    b.HasOne("RedeSocial.Domain.Models.Users", "Users")
                        .WithMany("Followers")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Likes", b =>
                {
                    b.HasOne("RedeSocial.Domain.Models.Posts", "Posts")
                        .WithMany("Likes")
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RedeSocial.Domain.Models.Users", "Users")
                        .WithMany("Likes")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Posts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Posts", b =>
                {
                    b.HasOne("RedeSocial.Domain.Models.Users", "Users")
                        .WithMany("Posts")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.PostsPhotos", b =>
                {
                    b.HasOne("RedeSocial.Domain.Models.Posts", "Posts")
                        .WithMany("PostsPhotos")
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Tags", b =>
                {
                    b.HasOne("RedeSocial.Domain.Models.Posts", "Posts")
                        .WithMany()
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RedeSocial.Domain.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Posts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Posts", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("PostsPhotos");
                });

            modelBuilder.Entity("RedeSocial.Domain.Models.Users", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Followers");

                    b.Navigation("Likes");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
